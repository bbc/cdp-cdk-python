def stacksToSelect = ""
pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'eu-west-1' // Change to your region
        CDK_STACK_NAME = 'CdpCdkPythonStack'   // Change to your stack name
        // PYTHONPATH= '/usr/local/lib/python3.12/site-packages:/var/lib/jenkins/.local/lib/python3.12/site-packages'
    }

    parameters {
        booleanParam(name: 'PROCEED_TO_DEPLOY', defaultValue: false, description: 'Select Yes to proceed to deployment after synthesizing.')
        choice(name: 'USECASE', choices: ['serverless ns and wg', 'producer datashare', 'consumer datashare', 'cdp delete account'], description: 'Select the usecase')
        choice(name: 'ENV', choices: ['int', 'test', 'live'], description: 'Select the environment')
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }
        stage('Activate env, install dependencies and synthesize') {
            steps {
                script {
                    def selectedUsecase = params.USECASE
                    //  Use Python3.12, activate new venv, install Python dependencies, synthesize the CDK app 
                    def initCommand = "python3.12 -m venv new-venv && source new-venv/bin/activate && python3 --version && pip install -r requirements.txt && python3 --version  && cdk synth --context env="
                    switch (selectedUsecase) {
                        case "serverless ns and wg":
                            stacksToSelect = "SecretsManagerStack RedshiftRolePolicyStack"
                            break
                        case "producer datashare":
                            stacksToSelect = "SecretsManagerStack CdpPiiDatashareStack"
                            break
                        case "consumer datashare":
                            stacksToSelect = "SecretsManagerStack ScvConsumerDatashareStack"
                            break
                        case "cdp delete account":
                            stacksToSelect = "CDPDeleteAccountStack"
                            break
                    }
                    command = initCommand + selectedEnv + " " + stacksToSelect
                    sh command
                }
            }
        }
        stage('Confirm Deployment') {
            when {
                expression {
                    params.PROCEED_TO_DEPLOY
                }
            }
            steps {
                script {
                    echo "Proceeding to 'cdk deploy' as PROCEED_TO_DEPLOY is true..."
                    def initCommand = "cd infrastructure/cdk && source new-venv/bin/activate && cdk deploy --require-approval never --context env="
                    command = initCommand + selectedEnv + " " + stacksToSelect
                    sh command
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline execution completed successfully!"
        }
        failure {
            echo "Pipeline execution failed."
        }
    }
}
